services:
  postgres:
    image: postgres:16.2
    environment:
      POSTGRES_DB: myappdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    healthcheck:  # Add a health check to ensure PostgreSQL is ready
      test: ["CMD-SHELL", "pg_isready -U user -d myappdb"]
      interval: 5s
      retries: 5
      timeout: 3s
    networks:
      - app-network
    volumes:
      - postgres-data:/var/lib/postgresql/data

  fastapi:
    build: .
    environment:
      DATABASE_URL: postgresql+asyncpg://user:password@postgres:5432/myappdb
    depends_on:
      postgres:
        condition: service_healthy  # Wait for PostgreSQL to be healthy
    networks:
      - app-network
    entrypoint: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: adminpassword
    depends_on:
      - postgres
    ports:
      - "5050:80"
    networks:
      - app-network
    volumes:
      - pgadmin-data:/var/lib/pgadmin

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  pgadmin-data:
