services:
  postgres:
    image: postgres:16.2
    environment:
      POSTGRES_DB: myappdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d myappdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    volumes:
      - postgres-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: adminpassword
      PGADMIN_LISTEN_PORT: 80
    depends_on:
      - postgres
    ports:
      - "5050:80" # Expose PgAdmin on port 5050 of the host
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - app-network

  fastapi:
    build: .
    environment:
      DATABASE_URL: postgresql://user:password@postgres:5432/myappdb # Added DATABASE_URL for Alembic
    volumes:
      - ./:/myapp/
    depends_on:
      postgres:
        condition: service_healthy # Wait for the database to be healthy
    networks:
      - app-network

  nginx:
    image: nginx:latest
    ports:
      - "8080:80" # Map port 8080 on the host to port 80 in NGINX
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - fastapi
    networks:
      - app-network

  minio: # Added MinIO service
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000" # MinIO API port
      - "9001:9001" # MinIO web interface port
    environment:
      MINIO_ROOT_USER: admin         # Root username
      MINIO_ROOT_PASSWORD: password  # Root password
    volumes:
      - minio-data:/data             # Persistent data storage
    command: server --console-address ":9001" /data
    networks:
      - app-network

volumes:
  postgres-data:
  pgadmin-data:
  minio-data: # Added volume for MinIO persistent data

networks:
  app-network:

